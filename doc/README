Magick -- a system of IRC services for IRC networks
---------------------------------------------------

Magick is copyright (c) 1997-1999 Preston A. Elder.  Magick may be
freely redistributed; see the GNU General Public License (in the file
"COPYING") for details.  Magick was originally based on EsperNet
services (c) 1996-1998 Andy Church.

Before we start ... no, I DIDNT put an rm -Rf / in the makefile ... I
did say ALMOST, didnt I?  And I want to thank you for reading the docs,
you're one of the few smart users out there, you diserve a bloody medal.


1. INTRODUCTION

     Magick is dedicated to the memory of my loving sister, Stacey Louise
Elder (1st Jan, 1975 - 25th Feb, 1998).  She has been there for me more than
anyone over the years, and I was distraught when she died, may her Lord love
her as much as I did, and keep her safe like I couldnt.  Merry Parting, Dear
Sister.

     Magick is a system of services to be used with Internet Relay Chat
networks.  Magick provides for definitive nickname and channel ownership,
as well as the ability to send messages ("memos") to offline users, and
gives IRC operators considerably more control over the network, enabling
them to change modes in any channel and place network-wide bans, among
other things.
     Magick runs as a server on an IRC network, and is designed to use
the RFC 1459 IRC protocol, with some additions discussed at the end of this
document.
     Also, Magick will not work with the reference implementation of RFC
1459 (irc2.x); an extension to the code is required to allow Services to
change channel modes without requiring channel operator status.  The DALnet
extension to ircd (which can be found at ftp.dal.net:/pub/dalnet/server) is
one implementation with the necessary extension.


2. QUICK INSTALL

     This is for those too impatiant to read the next section, tho I would
advise you read it anyway, its alot more detailed. People compiling for
Win32 please read the info at the end of this section.

     Goto magick directory and type:
		./configure

     Then edit the config.h to your settings (READ the documentation inside
this file, as this can be very important).  Then type:
		make
		make install

     If this is a first-time installation, you will need to copy the data-
files aswell ... This is done with:
		make install-data

     If you are not the primary services, you may wish to consider performing
two extra steps to this procedure, to facilitate with obtaining and implementing
new databases from the primary version of services:
		make backup
		make install-backup

     Thats it ... hopefully.  Read the next section if it failed.

Win32 Compiling:
     Please note, you will need to copy the sysconf.h.<server> --> sysconf.h
     and the Makefile.inc.windows --> Makefile.inc if you wish to compile
     under windows. Pre-compiled Win32 binaries are supplied with every
     distribution of Magick.
       <server> == irc2          Base irc2 (RFC 1459)
                   ts8           irc2 with TS8 protocol
                   ircu          Undernet
                   ircd          Dalnet
                   ircd4.4.15    Dalnet v4.4.15 or greater


3. CONFIGURATION, COMPILATION AND INSTALLATION

     In order to compile Magick, you'll need a Bourne shell or compatible
shell (such as GNU bash), GNU make or a compatible make (which needs to
support the "include" directive), and an ANSI C compiler (gcc recommended).
     Before trying to compile Magick, there are some manual configuration
tasks that need to be done: run the "configure" script, edit config.h, and
edit the top section of the Makefile.
     The "configure" script will try to learn how things work on your
system, and set up appropriate Makefile and C source definitions.  It will
also ask you a few questions about how you want Services set up.  (It will
ask all of the questions before doing any of the automated tests.)  If you
get an error while running the script, get bash (if you don't already have
it) and run "bash configure".  IMPORTANT NOTE:  Make sure you select the
correct IRC server style!  If Magick compiles correctly but you only get
messages like "Sorry, registration failed", the most likely cause is that
you chose the wrong IRC server style.
     config.h contains basic definitions for Magick -- configuration file
name, data directory (just incase configure fails), etc.  Most should be
able to be left alone.
     The Makefile has a section at the top allowing you to configure
Magick general mode of operation.  
     Once these steps are done, you should be able to compile Magick
with little trouble.  If Magick fails to compile on your system, or if
you have to tweak configure's output to get it to work, let me know what
went wrong so I can try and incorporate a fix into the configure script
or the main code.
     Once Magick is compiled, type "make install" to copy the programs
files to their destinations.  If you are installing Magick for the first
time, you also need to run "make install-data" to copy the data files to
the destination data directory.  Care should be taken that only authorized
people have access to these files; passwords are NOT encrypted at present,
so unauthorized access to the files could be a big problem!
     Once installed, copy the magick.ini file found in the doc directory,
and edit it for your network -- This file contains MOST of the information
needed about how magick should run, etc.

     NOTE:  The HelpServ data files (data/helpfiles/*) are set up for the
DarkerNet IRC network; you'll want to change them before starting up
Magick on your own network.
     NOTE 2:  Magick databases are endian-specific; that is, databases
created on a little-endian machine won't work on a big-endian one and
vice-versa (except in the degenerate case of an empty database).
Currently, this means that Magick can't be moved from or to an Intel x86
machine without manually converting the databases, until Intel gets their
act together and starts making big-endian processors like the rest of the
world.


4. OPERATION

     This section does not detail the operation of the individual pieces of
Magick; that information can be found in user.doc and oper.doc, or by reading
the online help files ("/msg *Serv help" or read lib/*serv/index).  This
section only describes how to start Magick itself.
     Normally, Magick can be run simply by invoking the "magick"
executable.  Magick will then use the defaults specified in the config.h
and magick.ini files, and connect to the specified uplink server.
Alternatively, any of the following command-line options can be specified
to change the default values:
	-remote server[:port]	Connect to the specified server.
	-name servername	Our server name (e.g. hell.darker.net).
	-desc string		Description of us (e.g. DarkerNet Services).
	-user username		Username for Services' nicks (e.g. services).
	-host hostname		Hostname for Services' nicks (e.g. darker.net).
	-prefix prefix		Prefix for Magick Outlet (see magick.ini)
				    (e.g. "Magick-").
	-dir directory		Directory containing Services' data files
				    (e.g. /usr/local/lib/services).
	-config filename	Config file to be used (e.g. magick.ini).
	-log filename		Services log filename (e.g. magick.log).
	-update secs		How often to update databases, in seconds.
	-debug			Enable debugging mode--more info sent to log.
	-relink secs		Specify seconds to re-attempt link if SQUIT.
	-norelink		Die on SQUIT or kill -1.
	-level level		Specify services level (>1 = backup).
        -offset hours		Specify the TimeZone offset for backups.
	-live			Dont fork (log to terminal + logs)

     Upon starting, Magick will parse its command-line parameters, open
its logfile, then (assuming all went well) detach itself and run in the
background (unless live is specified).  If live is specified it will
output logs to terminal, pushing CTRL-C will cause a fork() (background).
     If Magick is configured to SERVICES_LEVEL > 1, it can serve as a
"backup" to the full version of Services.  A "full" version of Services
(of level 1) will automatically reintroduce its pseudo-clients on nick
collide, while a "backup" Services will not, thus allowing full Services
to be brought up at any time without disrupting the network (and without
having to take backup Services down beforehand).
     Two additional programs available in addition to the main executable:
"listnicks" and "listchans", both installed as soft links to the main
executable.  The programs will list all registered nicknames and channels,
respectively; or, if given the -c option, will display the number of
registered nicknames or channels.
     If you have anykind of "relink" mode active (ie. you didnt take out
SERVER_RELINK setting or set it to -1, or didnt use the -norelink flag),
only an OperServ QUIT or SHUTDOWN or a kill -9 will stop Magick.  A SQUIT
will just cause relink (after period specified with SERVER_RELINK or the
-relink flag).  The RELOAD OperServ command as will a kill -HUP will cause
the databases/config to be reloaded.  A standard kill may also be used to
save the dbases (added as the standard shutdown procedure is to send a
standard kill then a kill -9 to all processes).


5. OVERVIEW OF SERVICES CLIENTS

     This is a brief introduction to the various clients available from
Magick.  All *Serv clients can be /msg'd with "help" for a general
introduction.
     NickServ is the nickname server; it allows users to register and
control nicknames, and will (at the user's choice) /kill any unauthorized
user who tries to use that nick after a warning.
     ChanServ is the channel server; as NickServ, it allows users to
register and control channels.  There is a much wider array of controls
available via ChanServ than NickServ, since there are considerably more
features available.  These include automatic mode setting, topic
retention (active by default, this will cause the channel's topic to be
saved while the channel is empty and restored when a user joins it again),
and automatic opping (and kicking) of selected users.
     MemoServ allows users to send short messages to other users, which can
be stored and retrieved at the recipient's convenience.  MemoServ also stores
channel memos (called NEWS articles), which can be used to inform a channel
of current events, etc.
     HelpServ is Services' help system; it will, on request, send a help
text to a user.  Other Services clients also call on HelpServ for their
own help functions.  (So, for example, "/msg ChanServ help register" is the
same as "/msg HelpServ chanserv register".
     IrcIIHelp is HelpServ under another name, and allows ircII users to
simply type "/help <topic>" to get help on the ircII client.
     OperServ provides services to IRC operators, including the ability to
change the mode of any channel, kick any user from a channel, and add and
remove network-wide bans (similar to classic K:lines, but applying to all
servers on the network).  A certain set of operators can be defined (in
config.h) as Services operators, and can perform additional functions, such
as manually updating Magick' databases or shutting Magick down.
(Note that Magick will not recognize a user as a Services operator unless
that user is in the SERVICES_OPS definition, has identified with NickServ
and is oper'd up.)  Obviously, all these functions should be used with care.
     DevNull is just like its Unix equivalent /dev/null: it ignores
anything sent to it.  It is responcible for notifying users when services
are ignoring them, and irc operators when flood protection has been triggered,
if DevNull is removed, Flood Protection is disabled.
     Death is the global noticer: when Magick is instructed to send a
notice to all clients on the network, this nickname sends the message.
Obviously, you should change it to a name to suit your network (or some
other useful name)!


6. IRC PROTOCOL ADDITIONS

Magick has not been tested on bare (non-TS8) irc2.x servers; please
report any problems.

The following commands, not defined in RFC 1459, are used by Magick:

AKILL

    Syntax: AKILL <hostmask> <usermask> <reason>

    Adds an AutoKill to the network; this is like a K:line, but is
    propogated to all servers.  Any user matching the usermask and
    hostmask will not be allowed to connect.

    Example:  :hell.darker.net AKILL *.lame.com lamer :Flooding
        Disallows any client matching "lamer@*.lame.com" from connecting
        to the network.

RAKILL

    Syntax: RAKILL <hostmask> <usermask>

    Removes an AutoKill line from all servers.

    Example:  :hell.darker.net RAKILL *.lame.com lamer
        Removes the AutoKill described in the previous example.

GLOBOPS

    Syntax: GLOBOPS <message>

    Sends a message to all users with user mode +og.

    Example:  :PreZ GLOBOPS :Watch out for flooders from *.lame.com.

GOPER

    Syntax: GOPER <message>

    Sends a message to all IRC operators, regardless of other user modes.

    Example:  :hell.darker.net GOPER :WARNING -- clones detected from
                      ppp1-9.lame.com

ALSO for recent DALnet ircd's (4.4.15+) the specialised services code is
used to enable greater control via. services, and enable greater intergration
including:

SVSMODE

    Syntax: SVSMODE <user> <mode>

    Changes a USER mode.

    Example:  :hell.darker.net SVSMODE BadOper -o

SVSNOOP

    Syntax: SVSNOOP <server> <+|->

    Restricts all IRC Operators on a server local IRC Operators (works exactly
    like a Q: line on that server in the ircd.conf).

    Example:  :hell.darker.net SVSNOOP testlink.darker.net +

SVSKILL

    Syntax: SVSKILL <user> <reason>

    Terminates a user's IRC session, but with no indication of who did it, or
    even that it was a person and not the server that did it.

    Example:  :hell.darker.net SVSKILL Lamer :Connection reset by peer

SQLINE

    Syntax: SQLINE <nick> <reason>

    Forbids the nick from being used by anyone who is not an IRC Operator
    works exactly like a Q: line on that nick in the ircd.conf).

    Example:  :hell.darker.net SQLINE OperServ :Reserved for services

UNSQLINE

    Syntax: UNSQLINE <nick>

    Re-allows the nick to be used by anyone (reverses QLINE)

    Example:  :hell.darker.net UNSQLINE OperServ

SVSNICK

    Syntax: SVSNICK <nick> <new-nick>

    Changes the nick of a user forcibly.

    Example:  :hell.darker.net SVSNICK SlowUser SlowUser_


7. REACHING THE AUTHOR

     I can be reached at the address prez@magick.tm.  Please feel free to
send comments, suggestions, problem reports, diffs, or whatever, though you
may not receive any reply.  Please do NOT ask for or expect direct online
help, as I am quite busy and cannot spare the time to set up Magick myself
on every system where it will be used.  If you do ask, expect to be abruptly
dismissed or ignored.

     If you are on the DarkerNet, RelicNet, Xnet IRC networks and want to
leave me a memo via MemoServ rather than sending E-mail, please include your
problem or suggestion _in the memo_.  Don't just say "I need to talk to you";
such memos will be ignored.
