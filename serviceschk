#!/bin/sh
#
# This is a script suitable for use in a crontab.  It checks to make sure
# your services are running.  If your services arn't found, it'll try to
# start them back up.
#
# You'll need to edit this script for your services.
#
# To check for your services every 10 minutes, put the following line in your
# crontab:
#    0,10,20,30,40,50 * * * *   /home/mydir/serviceschk
# And if you don't want to get email from crontab when it checks you services,
# put the following in your crontab:
#    0,10,20,30,40,50 * * * *   /home/mydir/serviceschk >/dev/null 2>&1
#

# Terminate Check
#exit 0

# change this to the directory you run your services from:
servicesdir="/usr/local/lib/services"

# command to start services if they're not running.
startcommand="./magick"

# change this to whatever your PID file is called
pidfile="magick.pid"

# file that says we're downloading new dbases if it exists
startlock="${servicesdir}/dbase.lock"

########## you probably don't need to change anything below here ##########

function chkfile () {
	if [ -s ${servicesdir}/$1.save ]; then
		sleep 3
		if [ -s ${servicesdir}/$1.save ]; then
			cp -f ${servicesdir}/$1.save ${servicesdir}/$1
		fi
	fi
	rm -f ${servicesdir}/$1.save
}

if [ -f $startlock ]; then exit 0; fi
cd $servicesdir
if test -r ${pidfile}; then
  # there is a pid file -- is it current?
  servicespid=`cat ${pidfile}`
  if `kill -CHLD $servicespid >/dev/null 2>&1`; then
    # it's still going
    # back out quietly
    exit 0
  fi
  echo ""
  echo "Stale ${pidfile} file (erasing it)"
  rm -f ${pidfile}
fi
echo ""
echo "Couldn't find the services running.  Reloading it..."
echo ""
for x in nick.db chan.db akill.db clone.db memo.db news.db sop.db message.db
	do chkfile $x; done
# check for valid
# data files.
if [ -s nick.db -a -s chan.db -a -s akill.db -a -s sop.db -a \
     -s clone.db -a -s memo.db -a -s news.db -a -s message.db ]; then
  exec ${startcommand}
  exit 0
fi
echo "Data files corrupt.  Could not reload the services.."
exit 0
